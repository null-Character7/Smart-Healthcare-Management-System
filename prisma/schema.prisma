// schema.prisma

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                   Int                   @id @default(autoincrement())
  name                 String
  email                String                @unique
  password             String
  userType             UserType
  appointments         Appointment[]
  appointmentRequests  AppointmentRequest[]  // Added relation to AppointmentRequest
}

model Doctor {
  id                    Int                   @id @default(autoincrement())
  name                  String
  specialty             String
  avatar                String?
  appointments          Appointment[]
  appointmentRequests    AppointmentRequest[] // Added relation to AppointmentRequest
}

model Appointment {
  id        Int      @id @default(autoincrement())
  date      DateTime
  time      String
  doctorId  Int
  patientId Int
  status    AppointmentStatus

  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  patient   User     @relation(fields: [patientId], references: [id])
}

model AppointmentRequest {
  id        Int      @id @default(autoincrement())
  date      DateTime
  time      String
  patientId Int
  doctorId  Int

  patient   User     @relation(fields: [patientId], references: [id])
  doctor    Doctor   @relation(fields: [doctorId], references: [id])
}

enum UserType {
  PATIENT
  DOCTOR
}

enum AppointmentStatus {
  CONFIRMED
  PENDING
  CANCELED
}
